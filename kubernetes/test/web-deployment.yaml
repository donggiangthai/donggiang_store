apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.prod.yml -v -o .\kubernetes\test\
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.prod.yml -v -o .\kubernetes\test\
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/donggiang-store-default: "true"
        io.kompose.service: web
    spec:
      containers:
        - env:
            - name: AWS_DEFAULT_REGION
              value: us-east-1
            - name: DATABASE
              value: postgres
            - name: DEBUG
              value: "False"
            - name: USE_S3
              value: "True"
          image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/donggiang_store-web:${TAG}
          name: web
          ports:
            - containerPort: 8000
          readinessProbe:
            periodSeconds: 15
            timeoutSeconds: 2
            successThreshold: 2
            failureThreshold: 2
            httpGet:
              path: /health
              port: web
          startupProbe:
            httpGet:
              path: /health
              port: web
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            periodSeconds: 15
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2
            httpGet:
              path: /health
              port: web
          resources: {}
      restartPolicy: Always
status: {}
